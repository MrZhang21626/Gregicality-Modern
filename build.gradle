plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfig 'gregicality_modern.mixins.json'
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenLocal()
    mavenCentral()
    maven { url = "https://api.modrinth.com/maven" }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        // location of the maven that hosts JEI files before January 2023
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url = "https://maven.firstdarkdev.xyz/snapshots" }
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven { // Registrate
        url "https://maven.tterrag.com/"
    }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:$project.forge_version"

    // compile against the JEI API but do not include it at runtime
    modCompileOnlyApi("mezz.jei:jei-$project.minecraft_version-common-api:$project.jei_version")
    modCompileOnlyApi("mezz.jei:jei-$project.minecraft_version-fabric-api:$project.jei_version")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-$project.minecraft_version-fabric:$project.jei_version")

    modCompileOnly "dev.emi:emi-forge:$project.emi_version:api"
    modLocalRuntime "dev.emi:emi-forge:$project.emi_version"

    modImplementation "curse.maven:jade-324717:$project.jade_id"

    modImplementation "dev.toma.configuration:configuration-forge-$project.minecraft_version:$project.configuration_version"

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:$project.mixinextras_version"))
    implementation(include("io.github.llamalad7:mixinextras-forge:$project.mixinextras_version"))

    modImplementation("dev.latvian.mods:kubejs-forge:$project.kubejs_version")
    modImplementation("com.tterrag.registrate:Registrate:$project.registrate_version")

    modImplementation "com.lowdragmc.ldlib:ldlib-forge-$project.minecraft_version:$project.ldlib_version"
    modImplementation "com.gregtechceu.gtceu:gtceu-$project.minecraft_version:$project.gtceu_version"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
